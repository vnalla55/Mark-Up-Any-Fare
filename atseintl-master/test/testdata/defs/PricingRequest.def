name: PricingRequest
namespace: tse
package: DataModel

factoryAggregate: ticketingAgent:         Agent*    ticketingAgent()
factoryAggregate: ticketingDate:          DateTime  ticketingDT()
factoryAggregate: ticketDateOverride:     DateTime  ticketDateOverride()
factoryAggregate: requestedDepartureDate: DateTime  requestedDepartureDT()

factoryAggregate: taxOverride:          std::vector<TaxOverride*> taxOverride()
scalarAggregate:  taxIdExempted:        std::vector<std::string>  taxIdExempted()
scalarAggregate:  considerOnlyCarriers: std::vector<CarrierCode>  considerOnlyCarriers()
scalarAggregate:  diagArgType:          std::vector<std::string>  diagArgType()
scalarAggregate:  diagArgDate:          std::vector<std::string>  diagArgData()

section: Attributes
  scalar: corporateID:              std::string     corporateID()
  scalar: accountCode:              std::string     accountCode()
  scalar: diagnosticNumber:         int16_t         diagnosticNumber()
  scalar: validatingCarrier:        CarrierCode     validatingCarrier()
  scalar: ticketPointOverride:      LocCode         ticketPointOverride()
  scalar: salePointOverride:        LocCode         salePointOverride()
  scalar: equivAmountOverride:      double          equivAmountOverride()
  scalar: rateAmountOverride:       double          rateAmountOverride()
  scalar: secondRateAmountOverride: double          secondRateAmountOverride()
  scalar: lowFareNoAvailability:    char            lowFareNoAvailability()
  scalar: lowFareRequested:         char            lowFareRequested()
  scalar: exemptSpecificTaxes:      char            exemptSpecificTaxes()
  scalar: exemptAllTaxes:           char            exemptAllTaxes()
  scalar: priceNullDate:            char            priceNullDate()
  scalar: ticketByMail:             char            ticketByMail()
  scalar: ticketEntry:              char            ticketEntry()
  scalar: formOfPaymentCash:        char            formOfPaymentCash()
  scalar: formOfPaymentCheck:       char            formOfPaymentCheck()
  scalar: formOfPaymentCard:        char            formOfPaymentCard()
  scalar: formOfPaymentGTR:         char            formOfPaymentGTR()
  scalar: contractNumber:           std::string     contractNumber()
  scalar: lengthATBFareCalc:        int16_t         lengthATBFareCalc()
  scalar: numberTaxBoxes:           int16_t         numberTaxBoxes()
  scalar: agencyTaxIsPercent:       char            agencyTaxIsPercent()
  scalar: refundPenalty:            char            refundPenalty()
  scalar: priceNoAvailability:      char            priceNoAvailability()
  scalar: ignoreTimeStamp:          char            ignoreTimeStamp()
  scalar: exemptPFC:                char            exemptPFC()
  scalar: electronicTicket:         char            electronicTicket()
  scalar: considerMultiAirport:     char            considerMultiAirport()
  scalar: boardPoint:               LocCode         boardPoint()
  scalar: offPoint:                 LocCode         offPoint()
  scalar: governingCarrier:         CarrierCode     governingCarrier()
  scalar: fareClassCode:            std::string     fareClassCode()
  scalar: globalDirection:          GlobalDirection globalDirection()
  scalar: fromCurrency:             CurrencyCode    fromCurrency()
  scalar: toCurrency:               CurrencyCode    toCurrency()
  scalar: amountToBeConverted:      double          amountToBeConverted()
endsection
