#!/bin/sh
#-----------------------------------------------------------------
#  config.vars - shell variables needed by application scripts
#                and the Node Agent.
#
#  IMPORTANT!  Variables prefixed with "COMMON_" and "ADMIN_" are
#              recognized by Command & Control and server farm
#              scripts, so their names and data types should never
#              change.
#-----------------------------------------------------------------

# always source in the common set of shell variables

. ./set.atse.common.sh
. ${ATSE_COMMON}/config.vars

# might have to tweak a few of the COMMON_ variables here, if we
# use non-standard values...

COMMON_DB_SCENARIO="HYBRID"

#-----------------------------------------------------------------
# DECLARATION SECTION
#-----------------------------------------------------------------

# Variables common to all ATSEv2 applications go here. They'll probably get migrated to a separate script.
ATSEV2_DEVELOPER_SERVICES_EMAIL="PSD_DevSvc@sabre.com"
ATSEV2_INT_STAGE="Sandbox"
ATSEV2_SYSTEM_OWNER_EMAIL="ATSEv2SystemOwners@sabre.com"

# ADMIN_SERVICES indicates what "services" are supported by this
# application, and dictates the naming conventions of the
# ADMIN_ variables that follow.  Separate multiple services with
# a space.

ADMIN_APPFLAVOR=atseintl
ADMIN_APPHOME=${COMMON_ATSEINTL_HOME}
ADMIN_SERVICES="FAREDISPLAY"
ADMIN_ULIMIT_CORES=0
ADMIN_ULIMIT_STACK=2048

# Server farm standard configuration override-ables for the FAREDISPLAY
# service. They may be overridden later by sourcing in of .node
# and .user files or other needs of the specific application.

ADMIN_FAREDISPLAY_ACMS_QUERY=Y
ADMIN_FAREDISPLAY_ACMS_TYPES="tseserver"
ADMIN_FAREDISPLAY_ACMS_FORMATS="INI"
ADMIN_FAREDISPLAY_ACMS_FILES="tseserver.acms.cfg"
ADMIN_FAREDISPLAY_ADDITIONAL_ARGS=""  # leave blank - will be set later on
ADMIN_FAREDISPLAY_AVAILABILITY=""
ADMIN_FAREDISPLAY_APPCONSOLE_GROUP=FareDisplay
ADMIN_FAREDISPLAY_BASE_APPCONSOLE_PORT=5002
ADMIN_FAREDISPLAY_BASE_ADMIN_PORT=0
ADMIN_FAREDISPLAY_BASE_CORBA_PORT=0
ADMIN_FAREDISPLAY_BASE_IP_PORT=53901
ADMIN_FAREDISPLAY_BIG_IP_CONN_LIMIT=0
ADMIN_FAREDISPLAY_BIG_IP_EMBEDDED=Y
ADMIN_FAREDISPLAY_BINARY=../tseshared.${COMMON_BASELINE}/tseserverje
ADMIN_FAREDISPLAY_COMBINED_OUTPUT=N
ADMIN_FAREDISPLAY_CPU_THRESHOLD=0
ADMIN_FAREDISPLAY_EMAIL_LIST="${ATSEV2_SYSTEM_OWNER_EMAIL}"
ADMIN_FAREDISPLAY_ENABLE=Y
ADMIN_FAREDISPLAY_EXTERNAL_APP=Y
ADMIN_FAREDISPLAY_FFC_APPNAME=""
ADMIN_FAREDISPLAY_FFC_MESSAGE_LEVEL=""
ADMIN_FAREDISPLAY_FFC_REPLICA_NAME=""
ADMIN_FAREDISPLAY_FFC_SERVICE_NAME=""
ADMIN_FAREDISPLAY_FFC_TIMEOUT=""
ADMIN_FAREDISPLAY_HUNG_THRESHOLD=600
ADMIN_FAREDISPLAY_INIAPP=""
ADMIN_FAREDISPLAY_INICORBA=""
ADMIN_FAREDISPLAY_INIFILE=""
ADMIN_FAREDISPLAY_INSTANCES=1
ADMIN_FAREDISPLAY_IS_LIMITED_NODE=N
ADMIN_FAREDISPLAY_KILL_PATIENCE=60
ADMIN_FAREDISPLAY_LD_LIBRARY_PATH=""
ADMIN_FAREDISPLAY_MEM_THRESHOLD=0
ADMIN_FAREDISPLAY_NAME_SERVICE=""
ADMIN_FAREDISPLAY_NEEDS_CLM=N
ADMIN_FAREDISPLAY_PROCESS_NAME=tseserver.faredisplay
ADMIN_FAREDISPLAY_READY_TIMEOUT=0
ADMIN_FAREDISPLAY_RESTART_WAIT=5
ADMIN_FAREDISPLAY_SPIN_THRESHOLD=0
ADMIN_FAREDISPLAY_START_SLEEP=1
ADMIN_FAREDISPLAY_SUPPRESS_STDERR=N
ADMIN_FAREDISPLAY_SUPPRESS_STDOUT=Y
ADMIN_FAREDISPLAY_TYPE=NATIVE
ADMIN_FAREDISPLAY_USES_GETOPTS=Y

# The following are for developer convenience and work better
# if they are NOT declared as shell variables.  This way, the
# developer can export them as desired in their environment
# prior to running istart.sh.  They are included here for
# documentation purposes only.

  # ADMIN_FAREDISPLAY_DEBUG=N
  # ADMIN_FAREDISPLAY_LNIATA=""

# Configuration override-ables specific to the FAREDISPLAY service.  Server
# farm scripts don't do anything with these, but they still may
# be subject to overrides by the NCM.

#-----------------------------------------------------------------
# OVERRIDE SECTION
#-----------------------------------------------------------------

# overrides based on our environment are processed first

if [ "${COMMON_SYSTYPE}" != "ProdHybrid" ] ; then
  ADMIN_ULIMIT_CORES="unlimited"
fi

# The BigIP pool names for all environments, might be overridden later via NCM:
case "${COMMON_SYSTYPE}" in
  ProdHybrid) ADMIN_FAREDISPLAY_BIG_IP_DEFAULT_POOL="fd.a.prod_pool_53901 fd.Liberty.prod_pool_53901"
              ADMIN_FAREDISPLAY_BIG_IP_LIMITED_POOL="fd.b.prod_pool_53901"
              ADMIN_FAREDISPLAY_EMAIL_LIST="${ADMIN_FAREDISPLAY_EMAIL_LIST}"
              ;;
  CertHybrid) ADMIN_FAREDISPLAY_BIG_IP_POOL="fd.a.cert_pool_53901 fd.Liberty.cert_pool_53901"
              ADMIN_FAREDISPLAY_EMAIL_LIST="${ATSEV2_DEVELOPER_SERVICES_EMAIL} ${ADMIN_FAREDISPLAY_EMAIL_LIST}"
              ;;
  PlabHybrid) ;; # PLab settings are managed directly by PLab
  TestHybrid) # Int BigIP pools are set below, according to a value of ATSEV2_INT_STAGE
              ADMIN_FAREDISPLAY_EMAIL_LIST="${ATSEV2_DEVELOPER_SERVICES_EMAIL} ${ADMIN_FAREDISPLAY_EMAIL_LIST}"
              ;;
  DevHybrid ) ADMIN_FAREDISPLAY_BIG_IP_POOL="fd_dev_a"
              ADMIN_FAREDISPLAY_EMAIL_LIST=""
              COMMON_MYSQL_INI="DISABLE"
              ;;
esac

if [ "${COMMON_DEVELOPER_CONFIG}" = "Y" ] ; then
  ADMIN_FAREDISPLAY_BASE_IP_PORT=auto
fi

# Overrides by config.vars.node are processed next.  This file is
# what is generated based on the NCM entries for the particular
# node.

# SET ADMIN_DYNAMIC_CONFIG FOR ALL ENV
ADMIN_DYNAMIC_CONFIG="Y"

if [ -f ./config.vars.node ] ; then
  . ./config.vars.node
fi

# Overrides by config.vars.user are processed next.  This file is
# optionally created by a developer to test developer instances.

if [ -f ./config.vars.user ] ; then
  . ./config.vars.user
fi

#-----------------------------------------------------------------
# ADDITIONAL APPLICATION PROCESSING SPECIFICS
# Manipulation of configuration according to any special rules
# as dictated by the application's needs.  Any variable settings
# beyond this point cannot be changed via external overrides.
#-----------------------------------------------------------------

# Limited nodes setup:
if [ "${COMMON_SYSTYPE}" = "ProdHybrid" ] ; then
  if [ "${ADMIN_FAREDISPLAY_IS_LIMITED_NODE}" = "Y" ] ; then
    ADMIN_ULIMIT_CORES="unlimited"
  fi
  if [ -z "${ADMIN_FAREDISPLAY_BIG_IP_POOL+x}" ] ; then
    if [ "${ADMIN_FAREDISPLAY_IS_LIMITED_NODE}" = "Y" ] ; then
      ADMIN_FAREDISPLAY_BIG_IP_POOL="${ADMIN_FAREDISPLAY_BIG_IP_DEFAULT_POOL} ${ADMIN_FAREDISPLAY_BIG_IP_LIMITED_POOL}"
    else
      ADMIN_FAREDISPLAY_BIG_IP_POOL="${ADMIN_FAREDISPLAY_BIG_IP_DEFAULT_POOL}"
    fi
  fi

# Int setup depends on the Int stage:
elif [ "${COMMON_SYSTYPE}" = "TestHybrid" ] ; then
  case "${ATSEV2_INT_STAGE}" in
    IntA) ADMIN_FAREDISPLAY_BIG_IP_POOL=${ADMIN_FAREDISPLAY_BIG_IP_POOL-"fd_int_a"}
          ;;
    IntB) ADMIN_FAREDISPLAY_BIG_IP_POOL=${ADMIN_FAREDISPLAY_BIG_IP_POOL-"fd_int_b"}
          ;;
    IntDaily) # There's no dedicated FD daily pool - keep what was set by NCM unchanged.
              ;;
    Sandbox) # it's a sandbox - system owners aren't interested in crash reports.
       ADMIN_FAREDISPLAY_EMAIL_LIST="Mohammad.Hossan@sabre.com"
       ;;
    *) # this variable should be set to something recognised by this script; if it's not, it's an error.
       echo ATSEV2_INT_STAGE variable not set correctly\! Required value is one of \"IntA\", \"IntB\", \"IntDaily\", or \"Sandbox\".
       ADMIN_FAREDISPLAY_ENABLE=N
  esac
fi


if [ -e ../tseshared.${COMMON_BASELINE} ] ; then
  . ../tseshared.${COMMON_BASELINE}/config_functions.sh
else
  . ../tseshared/config_functions.sh
fi

final_config_setup faredisplay \
                   "ADMIN_FAREDISPLAY_LD_LIBRARY_PATH" \
                   "ADMIN_FAREDISPLAY_ADDITIONAL_ARGS" \
                   ${ADMIN_FAREDISPLAY_BIG_IP_POOL} ""

ADMIN_FAREDISPLAY_ADDITIONAL_ARGS="${ADMIN_FAREDISPLAY_ADDITIONAL_ARGS} -acport=${ADMIN_FAREDISPLAY_BASE_APPCONSOLE_PORT}"
#-----------------------------------------------------------------
# END
#-----------------------------------------------------------------

