#!/bin/ksh

#===========================================================================
# SETUP

cd $(dirname $(which ${0}))
SCRIPT=$(basename $0)

TEST=0
if [ "${USER}" == "sg206456" ]; then
  TEST=1
  set -x
fi

ATSE_COMMON=/opt/atse/common
if (( TEST )); then
  ATSE_COMMON=${PWD}/${TEST_ENV}
fi

#===========================================================================
# CSF APP VARS

SHOWVARS_TMP=/tmp/.${SCRIPT}.showvars.$$
./showvars.sh > ${SHOWVARS_TMP}
. ${SHOWVARS_TMP}
rm ${SHOWVARS_TMP}

if (( TEST )); then
  COMMON_ADMIN_USER=${COMMON_STAGING_NODE_USER}
fi

#===========================================================================
# ADD / REMOVE

ACTION=$1
if [ -z "${ACTION}" ]; then
  STATUS=$( ./status.sh | awk '{ print $(NF-1) }' | head -1 )
  case "${STATUS}" in
    (*START*|*RUN*)       ACTION="add" ;;
    (STOP*|DISABLED|DEAD) ACTION="remove" ;;
    (MIA|*)               ACTION="" ;;
  esac
fi
case "${ACTION}" in
  ("add")     x="register" ;;
  ("remove")  x="deregister" ;;
  ("disable") x="disable" ;;
  (*)
    echo "SYNTAX ERROR: ${SCRIPT} add|remove|disable"
    exit 1
    ;;
esac

COMMAND="${ATSE_COMMON}/bigipsvc.sh"

if (( TEST )); then
  COMMAND="echo ${COMMAND}"
fi

# determine application port
app_name=$(echo ${COMMON_APPNAME} | tr "[:lower:]" "[:upper:]")
if [ "${app_name}" == "PRICINGV2" ]; then
  app_name="PRICING"
fi

eval CONNLIMIT=\$ADMIN_${app_name}_BIG_IP_CONN_LIMIT
if [ -z "${CONNLIMIT}" ]; then
  CONNLIMIT=0
fi

eval CONNBASIS=\$ADMIN_${app_name}_BIG_IP_CONN_LIMIT_BASIS
if [ -z "${CONNBASIS}" ]; then
  CONNBASIS="member"
fi

case "${ACTION}" in
  ("add"|"disable")
          COMMAND="${COMMAND} -v -connlimitBasis:${CONNBASIS} -connlimit ${CONNLIMIT}" ;;
  ("remove")
          COMMAND="${COMMAND} -remove -v"
          if [ "${CONNBASIS}" == "node" ]; then
            COMMAND="${COMMAND} -connlimitBasis:${CONNBASIS} -connlimit 0"
          fi
          ;;
esac
COMMAND="${COMMAND} -logfile $(pwd -P)/tsebigip.log -noshowstamp -keeplog ${COMMON_SYSTYPE} ${COMMON_BIG_IP}"
case "${ACTION}" in
  ("add")              COMMAND="${COMMAND} register" ;;
  ("remove"|"disable") COMMAND="${COMMAND} deregister" ;;
esac

eval app_pool=\$ADMIN_${app_name}_BIG_IP_POOL
eval app_port=\$ADMIN_${app_name}_BASE_IP_PORT
app_pool="${app_pool// /:}"
COMMAND="${COMMAND} ${app_pool}"

NUM_LISTENERS=$( grep -h NUM_LISTENERS tseserver.acms.cfg tseserver.cfg.node 2>/dev/null | grep -v ^# | sed 's/.*=//' | awk '{print $1}' | tail -1 )
if [ -z "${NUM_LISTENERS}" ]; then
  NUM_LISTENERS=1
fi

if (( TEST )); then
  NUM_LISTENERS=5
fi

while (( NUM_LISTENERS > 0 )); do
  ${COMMAND} ${app_port}
  (( app_port++ ))
  (( NUM_LISTENERS-- ))
done

#===========================================================================
# on remove with node basis - set node connection limit to 0

if [ "${ACTION}" == "remove" ]; then
  if [ "${CONNBASIS}" == "node" ]; then

    COMMAND="./bigip.pl"
    if (( TEST )); then
      COMMAND="echo ${COMMAND}"
    fi

    cd ${ATSE_COMMON}/perl
    prev=""
    for POOL_F5 in ${app_pool//:/ } ; do
      F5=${POOL_F5//*%/}
      if [ -n "${F5}" ]; then
        if [ "${prev}" != "${F5}" ]; then
          prev="${F5}"
          CONNLIMIT=0
          ${COMMAND} ${F5} setnodeaddressconnectionlimit ${COMMON_NODE_IP_ADDR} ${CONNLIMIT}
        fi
      fi
    done

  fi
fi

#===========================================================================
# CLEANUP

rm -f /tmp/.${SCRIPT}.*.$$

#===========================================================================
# EXIT

exit
