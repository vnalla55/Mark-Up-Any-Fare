#pragma once

#include "Common/FallbackUtil.h"
#include "DBAccess/DBResultSet.h"
#include "DBAccess/Queries/QueryGetFareRetailerRule.h"
#include "DBAccess/SQLStatement.h"

namespace tse
{
FIXEDFALLBACK_DECL(fallbackFRRaddRetailerCodeInFRR);
FIXEDFALLBACK_DECL(fallbackHandlingFee);

template <typename QUERYCLASS>
class QueryGetFareRetailerRuleSQLStatement : public DBAccess::SQLStatement
{
public:
  enum ColumnIndexes
  {
    FARERETAILERRULEID
    , SOURCEPSEUDOCITY
    , OWNERPSEUDOCITY
    , APPLICATIONIND
    , RULESEQNO
    , STATUSCD
    , UPDATEABLERULEIND
    , SECURITYITEMNO
    , RESULTINGFAREATTRITEMNO
    , VENDOR
    , CARRIERITEMNO
    , RULECDITEMNO
    , RULETARIFF
    , FARECLASSITEMNO
    , FARETYPE
    , BOOKINGCDITEMNO
    , OWRT
    , DISPLAYCATTYPE
    , LOC1
    , LOC1TYPE
    , LOC2
    , LOC2TYPE
    , DIRECTIONALITY
    , PUBLICPRIVATEIND
    , GLOBALDIR
    , PSGTYPEITEMNO
    , ACCOUNTCDITEMNO
    , POSDAYTIMEAPPLITEMNO
    , ROUTINGITEMNO
    , TKTDESIGNATORITEMNO
    , ACTIONCD
    , INHIBITCD
    , FARERETAILERCALCITEMNO
    , EFFECTIVENOWIND
    , DEACTIVATENOWIND
    , EFFDATETIME
    , DISCDATETIME
    , EXPIREDATE
    , CREATEDATE
    , LASTMODDATE
    , ACTIVATIONDATETIME
    , TRAVELDAYTIMEAPPLITEMNO
    , LOCATIONPAIREXCLUDEITEMNO
    , RULECDEXCLUDEITEMNO
    , RULETARIFFEXCLUDEITEMNO
    , FARECLASSEXCLUDEITEMNO
    , FARETYPEEXCLUDEITEMNO
    , BOOKINGCDEXCLUDEITEMNO
    , OWRTEXCLUDEITEMNO
    , DISPLAYCATTYPEEXCLUDEITEMNO
    , GLOBALDIREXCLUDEITEMNO
    , PSGTYPEEXCLUDEITEMNO
    , ACCOUNTCDEXCLUDEITEMNO
    , ROUTINGEXCLUDEITEMNO
    , TKTDESIGNATOREXCLUDEITEMNO
    , RETAILERCD
    , JOURNEYTYPECD
    , NUMBEROFCOLUMNS
  };

  const std::string& RegisterColumnsAndBaseSQL(const char* queryName) override
  {
    if (fallback::fixed::fallbackFRRaddRetailerCodeInFRR())
    {
      Command("select FARERETAILERRULEID, SOURCEPSEUDOCITY, OWNERPSEUDOCITY, APPLICATIONIND,"
              " RULESEQNO, STATUSCD, UPDATEABLERULEIND, SECURITYITEMNO, RESULTINGFAREATTRITEMNO,"
              " VENDOR, CARRIERITEMNO, RULECDITEMNO, RULETARIFF, FARECLASSITEMNO, FARETYPE,"
              " BOOKINGCDITEMNO, OWRT, DISPLAYCATTYPE, LOC1, LOC1TYPE, LOC2, LOC2TYPE,"
              " DIRECTIONALITY, PUBLICPRIVATEIND, GLOBALDIR, PSGTYPEITEMNO, ACCOUNTCDITEMNO,"
              " POSDAYTIMEAPPLITEMNO, ROUTINGITEMNO, TKTDESIGNATORITEMNO, ACTIONCD, INHIBITCD,"
              " FARERETAILERCALCITEMNO, EFFECTIVENOWIND, DEACTIVATENOWIND,"
              " EFFDATETIME, DISCDATETIME, EXPIREDATE, CREATEDATE, LASTMODDATE,"
              " ACTIVATIONDATETIME, TRAVELDAYTIMEAPPLITEMNO,"
              " LOCATIONPAIREXCLUDEITEMNO, RULECDEXCLUDEITEMNO, RULETARIFFEXCLUDEITEMNO,"
              " FARECLASSEXCLUDEITEMNO, FARETYPEEXCLUDEITEMNO, BOOKINGCDEXCLUDEITEMNO,"
              " OWRTEXCLUDEITEMNO, DISPLAYCATTYPEEXCLUDEITEMNO, GLOBALDIREXCLUDEITEMNO,"
              " PSGTYPEEXCLUDEITEMNO, ACCOUNTCDEXCLUDEITEMNO, ROUTINGEXCLUDEITEMNO,"
              " TKTDESIGNATOREXCLUDEITEMNO "
              "from FARERETAILERRULE "
              "where FARERETAILERRULEID = %1n and STATUSCD = 'A' and INHIBITCD = 'N' and UPDATEABLERULEIND != 'Y' "
              "and %2n <= DISCDATETIME and %3n <= EXPIREDATE and EFFDATETIME <= DISCDATETIME ");
    }
    else if (fallback::fixed::fallbackHandlingFee())
    {
      Command("select FARERETAILERRULEID, SOURCEPSEUDOCITY, OWNERPSEUDOCITY, APPLICATIONIND,"
                    " RULESEQNO, STATUSCD, UPDATEABLERULEIND, SECURITYITEMNO, RESULTINGFAREATTRITEMNO,"
                    " VENDOR, CARRIERITEMNO, RULECDITEMNO, RULETARIFF, FARECLASSITEMNO, FARETYPE,"
                    " BOOKINGCDITEMNO, OWRT, DISPLAYCATTYPE, LOC1, LOC1TYPE, LOC2, LOC2TYPE,"
                    " DIRECTIONALITY, PUBLICPRIVATEIND, GLOBALDIR, PSGTYPEITEMNO, ACCOUNTCDITEMNO,"
                    " POSDAYTIMEAPPLITEMNO, ROUTINGITEMNO, TKTDESIGNATORITEMNO, ACTIONCD, INHIBITCD,"
                    " FARERETAILERCALCITEMNO, EFFECTIVENOWIND, DEACTIVATENOWIND,"
                    " EFFDATETIME, DISCDATETIME, EXPIREDATE, CREATEDATE, LASTMODDATE,"
                    " ACTIVATIONDATETIME, TRAVELDAYTIMEAPPLITEMNO,"
                    " LOCATIONPAIREXCLUDEITEMNO, RULECDEXCLUDEITEMNO, RULETARIFFEXCLUDEITEMNO,"
                    " FARECLASSEXCLUDEITEMNO, FARETYPEEXCLUDEITEMNO, BOOKINGCDEXCLUDEITEMNO,"
                    " OWRTEXCLUDEITEMNO, DISPLAYCATTYPEEXCLUDEITEMNO, GLOBALDIREXCLUDEITEMNO,"
                    " PSGTYPEEXCLUDEITEMNO, ACCOUNTCDEXCLUDEITEMNO, ROUTINGEXCLUDEITEMNO,"
                    " TKTDESIGNATOREXCLUDEITEMNO, RETAILERCD "
                    "from FARERETAILERRULE "
                    "where FARERETAILERRULEID = %1n and STATUSCD = 'A' and INHIBITCD = 'N' and UPDATEABLERULEIND != 'Y' "
                    "and %2n <= DISCDATETIME and %3n <= EXPIREDATE and EFFDATETIME <= DISCDATETIME ");
    }
    else
    {
      Command("select FARERETAILERRULEID, SOURCEPSEUDOCITY, OWNERPSEUDOCITY, APPLICATIONIND,"
                    " RULESEQNO, STATUSCD, UPDATEABLERULEIND, SECURITYITEMNO, RESULTINGFAREATTRITEMNO,"
                    " VENDOR, CARRIERITEMNO, RULECDITEMNO, RULETARIFF, FARECLASSITEMNO, FARETYPE,"
                    " BOOKINGCDITEMNO, OWRT, DISPLAYCATTYPE, LOC1, LOC1TYPE, LOC2, LOC2TYPE,"
                    " DIRECTIONALITY, PUBLICPRIVATEIND, GLOBALDIR, PSGTYPEITEMNO, ACCOUNTCDITEMNO,"
                    " POSDAYTIMEAPPLITEMNO, ROUTINGITEMNO, TKTDESIGNATORITEMNO, ACTIONCD, INHIBITCD,"
                    " FARERETAILERCALCITEMNO, EFFECTIVENOWIND, DEACTIVATENOWIND,"
                    " EFFDATETIME, DISCDATETIME, EXPIREDATE, CREATEDATE, LASTMODDATE,"
                    " ACTIVATIONDATETIME, TRAVELDAYTIMEAPPLITEMNO,"
                    " LOCATIONPAIREXCLUDEITEMNO, RULECDEXCLUDEITEMNO, RULETARIFFEXCLUDEITEMNO,"
                    " FARECLASSEXCLUDEITEMNO, FARETYPEEXCLUDEITEMNO, BOOKINGCDEXCLUDEITEMNO,"
                    " OWRTEXCLUDEITEMNO, DISPLAYCATTYPEEXCLUDEITEMNO, GLOBALDIREXCLUDEITEMNO,"
                    " PSGTYPEEXCLUDEITEMNO, ACCOUNTCDEXCLUDEITEMNO, ROUTINGEXCLUDEITEMNO,"
                    " TKTDESIGNATOREXCLUDEITEMNO, RETAILERCD, JOURNEYTYPECD "
                    "from FARERETAILERRULE "
                    "where FARERETAILERRULEID = %1n and STATUSCD = 'A' and INHIBITCD = 'N' and UPDATEABLERULEIND != 'Y' "
                    "and %2n <= DISCDATETIME and %3n <= EXPIREDATE and EFFDATETIME <= DISCDATETIME ");
    }

    // callback to adjust query
    adjustBaseSQL();

    ConstructSQL();

    // Register SQL statement prior to parameter substitutions
    QUERYCLASS::registerBaseSQL(queryName, *this);

    return *this;
  }

  static FareRetailerRuleInfo* mapRow(Row* row, FareRetailerRuleInfo*)
  {
    FareRetailerRuleInfo* info(new FareRetailerRuleInfo);
    info->fareRetailerRuleId() = row->getLong(FARERETAILERRULEID);
    info->sourcePseudoCity() = row->getString(SOURCEPSEUDOCITY);
    info->ownerPseudoCity() = row->getString(OWNERPSEUDOCITY);
    info->applicationInd() = row->getChar(APPLICATIONIND);
    info->ruleSeqNo() = row->getLong(RULESEQNO);
    info->statusCd() = row->getChar(STATUSCD);
    info->updateableRuleInd() = row->getChar(UPDATEABLERULEIND);
    info->securityItemNo() = row->getLong(SECURITYITEMNO);
    if (!row->isNull(RESULTINGFAREATTRITEMNO))
      info->resultingFareAttrItemNo() = row->getLong(RESULTINGFAREATTRITEMNO);
    if (!row->isNull(VENDOR))
      info->vendor() = row->getString(VENDOR);
    if (!row->isNull(CARRIERITEMNO))
      info->carrierItemNo() = row->getLong(CARRIERITEMNO);
    if (!row->isNull(RULECDITEMNO))
      info->ruleCdItemNo() = row->getLong(RULECDITEMNO);
    if (!row->isNull(RULETARIFF))
      info->ruleTariff() = row->getLong(RULETARIFF);
    if (!row->isNull(FARECLASSITEMNO))
      info->fareClassItemNo() = row->getLong(FARECLASSITEMNO);
    if (!row->isNull(FARETYPE))
      info->fareType() = row->getString(FARETYPE);
    if (!row->isNull(BOOKINGCDITEMNO))
      info->bookingCdItemNo() = row->getLong(BOOKINGCDITEMNO);
    if (!row->isNull(OWRT))
      info->owrt() = row->getChar(OWRT);
    if (!row->isNull(DISPLAYCATTYPE))
      info->displayCatType() = row->getChar(DISPLAYCATTYPE);
    info->loc1().loc() = row->getString(LOC1);
    if (!row->isNull(LOC1TYPE))
      info->loc1().locType() = row->getChar(LOC1TYPE);
    info->loc2().loc() = row->getString(LOC2);
    if (!row->isNull(LOC2TYPE))
      info->loc2().locType() = row->getChar(LOC2TYPE);
    if (!row->isNull(DIRECTIONALITY))
      info->directionality() = row->getChar(DIRECTIONALITY);
    if (!row->isNull(PUBLICPRIVATEIND))
      info->publicPrivateInd() = row->getChar(PUBLICPRIVATEIND);
    if (!row->isNull(GLOBALDIR))
      strToGlobalDirection(info->globalDir(), row->getString(GLOBALDIR));
    if (!row->isNull(PSGTYPEITEMNO))
      info->psgTypeItemNo() = row->getLong(PSGTYPEITEMNO);
    if (!row->isNull(ACCOUNTCDITEMNO))
      info->accountCdItemNo() = row->getLong(ACCOUNTCDITEMNO);
    if (!row->isNull(POSDAYTIMEAPPLITEMNO))
      info->posDayTimeApplItemNo() = row->getLong(POSDAYTIMEAPPLITEMNO);
    if (!row->isNull(ROUTINGITEMNO))
      info->routingItemNo() = row->getLong(ROUTINGITEMNO);
    if (!row->isNull(TKTDESIGNATORITEMNO))
      info->tktDesignatorItemNo() = row->getLong(TKTDESIGNATORITEMNO);
    if (!row->isNull(ACTIONCD))
      info->actionCd() = row->getString(ACTIONCD);
    if (!row->isNull(INHIBITCD))
      info->inhibitCd() = row->getChar(INHIBITCD);
    if (!row->isNull(FARERETAILERCALCITEMNO))
      info->fareRetailerCalcItemNo() = row->getLong(FARERETAILERCALCITEMNO);
    if (!row->isNull(EFFECTIVENOWIND))
      info->effectiveNowInd() = row->getChar(EFFECTIVENOWIND);
    if (!row->isNull(DEACTIVATENOWIND))
      info->deactivateNowInd() = row->getChar(DEACTIVATENOWIND);
    info->createDate() = row->getDate(CREATEDATE);
    info->effDate() = row->getDate(EFFDATETIME);
    info->discDate() = row->getDate(DISCDATETIME);
    info->expireDate() = row->getDate(EXPIREDATE);
    info->lastModDate() = row->getDate(LASTMODDATE);
    info->activationDateTime() = row->getDate(ACTIVATIONDATETIME);
    if (!row->isNull(TRAVELDAYTIMEAPPLITEMNO))
      info->travelDayTimeApplItemNo() = row->getLong(TRAVELDAYTIMEAPPLITEMNO);
    if (!row->isNull(LOCATIONPAIREXCLUDEITEMNO))
      info->locationPairExcludeItemNo() = row->getLong(LOCATIONPAIREXCLUDEITEMNO);
    if (!row->isNull(RULECDEXCLUDEITEMNO))
      info->ruleCdExcludeItemNo() = row->getLong(RULECDEXCLUDEITEMNO);
    if (!row->isNull(RULETARIFFEXCLUDEITEMNO))
      info->ruleTariffExcludeItemNo() = row->getLong(RULETARIFFEXCLUDEITEMNO);
    if (!row->isNull(FARECLASSEXCLUDEITEMNO))
      info->fareClassExcludeItemNo() = row->getLong(FARECLASSEXCLUDEITEMNO);
    if (!row->isNull(FARETYPEEXCLUDEITEMNO))
      info->fareTypeExcludeItemNo() = row->getLong(FARETYPEEXCLUDEITEMNO);
    if (!row->isNull(BOOKINGCDEXCLUDEITEMNO))
      info->bookingCdExcludeItemNo() = row->getLong(BOOKINGCDEXCLUDEITEMNO);
    if (!row->isNull(OWRTEXCLUDEITEMNO))
      info->owrtExcludeItemNo() = row->getLong(OWRTEXCLUDEITEMNO);
    if (!row->isNull(DISPLAYCATTYPEEXCLUDEITEMNO))
      info->displayCatTypeExcludeItemNo() = row->getLong(DISPLAYCATTYPEEXCLUDEITEMNO);
    if (!row->isNull(GLOBALDIREXCLUDEITEMNO))
      info->globalDirExcludeItemNo() = row->getLong(GLOBALDIREXCLUDEITEMNO);
    if (!row->isNull(PSGTYPEEXCLUDEITEMNO))
      info->psgTypeExcludeItemNo() = row->getLong(PSGTYPEEXCLUDEITEMNO);
    if (!row->isNull(ACCOUNTCDEXCLUDEITEMNO))
      info->accountCdExcludeItemNo() = row->getLong(ACCOUNTCDEXCLUDEITEMNO);
    if (!row->isNull(ROUTINGEXCLUDEITEMNO))
      info->routingExcludeItemNo() = row->getLong(ROUTINGEXCLUDEITEMNO);
    if (!row->isNull(TKTDESIGNATOREXCLUDEITEMNO))
      info->tktDesignatorExcludeItemNo() = row->getLong(TKTDESIGNATOREXCLUDEITEMNO);

    if (!fallback::fixed::fallbackFRRaddRetailerCodeInFRR())
    {
      if (!row->isNull(RETAILERCD))
        info->fareRetailerCode() = row->getString(RETAILERCD);
    }

    if (!fallback::fixed::fallbackHandlingFee()
        && !row->isNull(JOURNEYTYPECD))
    {
      info->journeyTypeCd() = row->getChar(JOURNEYTYPECD);
    }

    return info;
  }

private:
  virtual void adjustBaseSQL() {}
};

template <typename QUERYCLASS>
class QueryGetFareRetailerRuleHistoricalSQLStatement
    : public QueryGetFareRetailerRuleSQLStatement<QUERYCLASS>
{
private:
  void adjustBaseSQL() override
  {
    if (fallback::fixed::fallbackFRRaddRetailerCodeInFRR())
    {
      this->Command("select FARERETAILERRULEID, SOURCEPSEUDOCITY, OWNERPSEUDOCITY, APPLICATIONIND,"
                    " RULESEQNO, STATUSCD, UPDATEABLERULEIND, SECURITYITEMNO, RESULTINGFAREATTRITEMNO,"
                    " VENDOR, CARRIERITEMNO, RULECDITEMNO, RULETARIFF, FARECLASSITEMNO, FARETYPE,"
                    " BOOKINGCDITEMNO, OWRT, DISPLAYCATTYPE, LOC1, LOC1TYPE, LOC2, LOC2TYPE,"
                    " DIRECTIONALITY, PUBLICPRIVATEIND, GLOBALDIR, PSGTYPEITEMNO, ACCOUNTCDITEMNO,"
                    " POSDAYTIMEAPPLITEMNO, ROUTINGITEMNO, TKTDESIGNATORITEMNO, ACTIONCD, INHIBITCD,"
                    " FARERETAILERCALCITEMNO, EFFECTIVENOWIND, DEACTIVATENOWIND,"
                    " EFFDATETIME, DISCDATETIME, EXPIREDATE, CREATEDATE, LASTMODDATE,"
                    " ACTIVATIONDATETIME, TRAVELDAYTIMEAPPLITEMNO,"
                    " LOCATIONPAIREXCLUDEITEMNO, RULECDEXCLUDEITEMNO, RULETARIFFEXCLUDEITEMNO,"
                    " FARECLASSEXCLUDEITEMNO, FARETYPEEXCLUDEITEMNO, BOOKINGCDEXCLUDEITEMNO,"
                    " OWRTEXCLUDEITEMNO, DISPLAYCATTYPEEXCLUDEITEMNO, GLOBALDIREXCLUDEITEMNO,"
                    " PSGTYPEEXCLUDEITEMNO, ACCOUNTCDEXCLUDEITEMNO, ROUTINGEXCLUDEITEMNO,"
                    " TKTDESIGNATOREXCLUDEITEMNO "
                    "from FARERETAILERRULEH "
                    "where FARERETAILERRULEID = %1n and %2n <= EXPIREDATE and %3n >= CREATEDATE "
                    "and STATUSCD != 'P' and INHIBITCD = 'N' and UPDATEABLERULEIND != 'Y' "
                    "union all "
                    "select FARERETAILERRULEID, SOURCEPSEUDOCITY, OWNERPSEUDOCITY, APPLICATIONIND,"
                    " RULESEQNO, STATUSCD, UPDATEABLERULEIND, SECURITYITEMNO, RESULTINGFAREATTRITEMNO,"
                    " VENDOR, CARRIERITEMNO, RULECDITEMNO, RULETARIFF, FARECLASSITEMNO, FARETYPE,"
                    " BOOKINGCDITEMNO, OWRT, DISPLAYCATTYPE, LOC1, LOC1TYPE, LOC2, LOC2TYPE,"
                    " DIRECTIONALITY, PUBLICPRIVATEIND, GLOBALDIR, PSGTYPEITEMNO, ACCOUNTCDITEMNO,"
                    " POSDAYTIMEAPPLITEMNO, ROUTINGITEMNO, TKTDESIGNATORITEMNO, ACTIONCD, INHIBITCD,"
                    " FARERETAILERCALCITEMNO, EFFECTIVENOWIND, DEACTIVATENOWIND,"
                    " EFFDATETIME, DISCDATETIME, EXPIREDATE, CREATEDATE, LASTMODDATE,"
                    " ACTIVATIONDATETIME, TRAVELDAYTIMEAPPLITEMNO,"
                    " LOCATIONPAIREXCLUDEITEMNO, RULECDEXCLUDEITEMNO, RULETARIFFEXCLUDEITEMNO,"
                    " FARECLASSEXCLUDEITEMNO, FARETYPEEXCLUDEITEMNO, BOOKINGCDEXCLUDEITEMNO,"
                    " OWRTEXCLUDEITEMNO, DISPLAYCATTYPEEXCLUDEITEMNO, GLOBALDIREXCLUDEITEMNO,"
                    " PSGTYPEEXCLUDEITEMNO, ACCOUNTCDEXCLUDEITEMNO, ROUTINGEXCLUDEITEMNO,"
                    " TKTDESIGNATOREXCLUDEITEMNO "
                    "from FARERETAILERRULE "
                    "where FARERETAILERRULEID = %4n and %5n <= EXPIREDATE and %6n >= CREATEDATE "
                    "and STATUSCD != 'P' and INHIBITCD = 'N' and UPDATEABLERULEIND != 'Y' ");
    }
    else if (fallback::fixed::fallbackHandlingFee())
    {
      this->Command("select FARERETAILERRULEID, SOURCEPSEUDOCITY, OWNERPSEUDOCITY, APPLICATIONIND,"
                    " RULESEQNO, STATUSCD, UPDATEABLERULEIND, SECURITYITEMNO, RESULTINGFAREATTRITEMNO,"
                    " VENDOR, CARRIERITEMNO, RULECDITEMNO, RULETARIFF, FARECLASSITEMNO, FARETYPE,"
                    " BOOKINGCDITEMNO, OWRT, DISPLAYCATTYPE, LOC1, LOC1TYPE, LOC2, LOC2TYPE,"
                    " DIRECTIONALITY, PUBLICPRIVATEIND, GLOBALDIR, PSGTYPEITEMNO, ACCOUNTCDITEMNO,"
                    " POSDAYTIMEAPPLITEMNO, ROUTINGITEMNO, TKTDESIGNATORITEMNO, ACTIONCD, INHIBITCD,"
                    " FARERETAILERCALCITEMNO, EFFECTIVENOWIND, DEACTIVATENOWIND,"
                    " EFFDATETIME, DISCDATETIME, EXPIREDATE, CREATEDATE, LASTMODDATE,"
                    " ACTIVATIONDATETIME, TRAVELDAYTIMEAPPLITEMNO,"
                    " LOCATIONPAIREXCLUDEITEMNO, RULECDEXCLUDEITEMNO, RULETARIFFEXCLUDEITEMNO,"
                    " FARECLASSEXCLUDEITEMNO, FARETYPEEXCLUDEITEMNO, BOOKINGCDEXCLUDEITEMNO,"
                    " OWRTEXCLUDEITEMNO, DISPLAYCATTYPEEXCLUDEITEMNO, GLOBALDIREXCLUDEITEMNO,"
                    " PSGTYPEEXCLUDEITEMNO, ACCOUNTCDEXCLUDEITEMNO, ROUTINGEXCLUDEITEMNO,"
                    " TKTDESIGNATOREXCLUDEITEMNO, RETAILERCD "
                    "from FARERETAILERRULEH "
                    "where FARERETAILERRULEID = %1n and %2n <= EXPIREDATE and %3n >= CREATEDATE "
                    "and STATUSCD != 'P' and INHIBITCD = 'N' and UPDATEABLERULEIND != 'Y' "
                    "union all "
                    "select FARERETAILERRULEID, SOURCEPSEUDOCITY, OWNERPSEUDOCITY, APPLICATIONIND,"
                    " RULESEQNO, STATUSCD, UPDATEABLERULEIND, SECURITYITEMNO, RESULTINGFAREATTRITEMNO,"
                    " VENDOR, CARRIERITEMNO, RULECDITEMNO, RULETARIFF, FARECLASSITEMNO, FARETYPE,"
                    " BOOKINGCDITEMNO, OWRT, DISPLAYCATTYPE, LOC1, LOC1TYPE, LOC2, LOC2TYPE,"
                    " DIRECTIONALITY, PUBLICPRIVATEIND, GLOBALDIR, PSGTYPEITEMNO, ACCOUNTCDITEMNO,"
                    " POSDAYTIMEAPPLITEMNO, ROUTINGITEMNO, TKTDESIGNATORITEMNO, ACTIONCD, INHIBITCD,"
                    " FARERETAILERCALCITEMNO, EFFECTIVENOWIND, DEACTIVATENOWIND,"
                    " EFFDATETIME, DISCDATETIME, EXPIREDATE, CREATEDATE, LASTMODDATE,"
                    " ACTIVATIONDATETIME, TRAVELDAYTIMEAPPLITEMNO,"
                    " LOCATIONPAIREXCLUDEITEMNO, RULECDEXCLUDEITEMNO, RULETARIFFEXCLUDEITEMNO,"
                    " FARECLASSEXCLUDEITEMNO, FARETYPEEXCLUDEITEMNO, BOOKINGCDEXCLUDEITEMNO,"
                    " OWRTEXCLUDEITEMNO, DISPLAYCATTYPEEXCLUDEITEMNO, GLOBALDIREXCLUDEITEMNO,"
                    " PSGTYPEEXCLUDEITEMNO, ACCOUNTCDEXCLUDEITEMNO, ROUTINGEXCLUDEITEMNO,"
                    " TKTDESIGNATOREXCLUDEITEMNO, RETAILERCD "
                    "from FARERETAILERRULE "
                    "where FARERETAILERRULEID = %4n and %5n <= EXPIREDATE and %6n >= CREATEDATE "
                    "and STATUSCD != 'P' and INHIBITCD = 'N' and UPDATEABLERULEIND != 'Y' ");
    }
    else
    {
      this->Command("select FARERETAILERRULEID, SOURCEPSEUDOCITY, OWNERPSEUDOCITY, APPLICATIONIND,"
                    " RULESEQNO, STATUSCD, UPDATEABLERULEIND, SECURITYITEMNO, RESULTINGFAREATTRITEMNO,"
                    " VENDOR, CARRIERITEMNO, RULECDITEMNO, RULETARIFF, FARECLASSITEMNO, FARETYPE,"
                    " BOOKINGCDITEMNO, OWRT, DISPLAYCATTYPE, LOC1, LOC1TYPE, LOC2, LOC2TYPE,"
                    " DIRECTIONALITY, PUBLICPRIVATEIND, GLOBALDIR, PSGTYPEITEMNO, ACCOUNTCDITEMNO,"
                    " POSDAYTIMEAPPLITEMNO, ROUTINGITEMNO, TKTDESIGNATORITEMNO, ACTIONCD, INHIBITCD,"
                    " FARERETAILERCALCITEMNO, EFFECTIVENOWIND, DEACTIVATENOWIND,"
                    " EFFDATETIME, DISCDATETIME, EXPIREDATE, CREATEDATE, LASTMODDATE,"
                    " ACTIVATIONDATETIME, TRAVELDAYTIMEAPPLITEMNO,"
                    " LOCATIONPAIREXCLUDEITEMNO, RULECDEXCLUDEITEMNO, RULETARIFFEXCLUDEITEMNO,"
                    " FARECLASSEXCLUDEITEMNO, FARETYPEEXCLUDEITEMNO, BOOKINGCDEXCLUDEITEMNO,"
                    " OWRTEXCLUDEITEMNO, DISPLAYCATTYPEEXCLUDEITEMNO, GLOBALDIREXCLUDEITEMNO,"
                    " PSGTYPEEXCLUDEITEMNO, ACCOUNTCDEXCLUDEITEMNO, ROUTINGEXCLUDEITEMNO,"
                    " TKTDESIGNATOREXCLUDEITEMNO, RETAILERCD, JOURNEYTYPECD "
                    "from FARERETAILERRULEH "
                    "where FARERETAILERRULEID = %1n and %2n <= EXPIREDATE and %3n >= CREATEDATE "
                    "and STATUSCD != 'P' and INHIBITCD = 'N' and UPDATEABLERULEIND != 'Y' "
                    "union all "
                    "select FARERETAILERRULEID, SOURCEPSEUDOCITY, OWNERPSEUDOCITY, APPLICATIONIND,"
                    " RULESEQNO, STATUSCD, UPDATEABLERULEIND, SECURITYITEMNO, RESULTINGFAREATTRITEMNO,"
                    " VENDOR, CARRIERITEMNO, RULECDITEMNO, RULETARIFF, FARECLASSITEMNO, FARETYPE,"
                    " BOOKINGCDITEMNO, OWRT, DISPLAYCATTYPE, LOC1, LOC1TYPE, LOC2, LOC2TYPE,"
                    " DIRECTIONALITY, PUBLICPRIVATEIND, GLOBALDIR, PSGTYPEITEMNO, ACCOUNTCDITEMNO,"
                    " POSDAYTIMEAPPLITEMNO, ROUTINGITEMNO, TKTDESIGNATORITEMNO, ACTIONCD, INHIBITCD,"
                    " FARERETAILERCALCITEMNO, EFFECTIVENOWIND, DEACTIVATENOWIND,"
                    " EFFDATETIME, DISCDATETIME, EXPIREDATE, CREATEDATE, LASTMODDATE,"
                    " ACTIVATIONDATETIME, TRAVELDAYTIMEAPPLITEMNO,"
                    " LOCATIONPAIREXCLUDEITEMNO, RULECDEXCLUDEITEMNO, RULETARIFFEXCLUDEITEMNO,"
                    " FARECLASSEXCLUDEITEMNO, FARETYPEEXCLUDEITEMNO, BOOKINGCDEXCLUDEITEMNO,"
                    " OWRTEXCLUDEITEMNO, DISPLAYCATTYPEEXCLUDEITEMNO, GLOBALDIREXCLUDEITEMNO,"
                    " PSGTYPEEXCLUDEITEMNO, ACCOUNTCDEXCLUDEITEMNO, ROUTINGEXCLUDEITEMNO,"
                    " TKTDESIGNATOREXCLUDEITEMNO, RETAILERCD, JOURNEYTYPECD "
                    "from FARERETAILERRULE "
                    "where FARERETAILERRULEID = %4n and %5n <= EXPIREDATE and %6n >= CREATEDATE "
                    "and STATUSCD != 'P' and INHIBITCD = 'N' and UPDATEABLERULEIND != 'Y' ");
    }
  }
  virtual void adjustBaseSQL(int step, DBAccess::SQLStatement& partialStatement) {}
};

template <class QUERYCLASS>
class QueryGetAllFareRetailerRuleSQLStatement
    : public QueryGetFareRetailerRuleSQLStatement<QUERYCLASS>
{

private:
  void adjustBaseSQL() override
  {
    this->Where("%cd >= CREATEDATE"
                " and %cd <= EXPIREDATE"
                " and STATUSCD = 'A'");
  }
};

} // tse


